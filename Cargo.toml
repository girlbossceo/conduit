[package]
name = "conduit"
description = "a cool fork of Conduit, a Matrix homeserver written in Rust"
license = "Apache-2.0"
authors = ["strawberry <strawberry@puppygock.gay>", "timokoesters <timo@koesters.xyz>"]
homepage = "https://puppygock.gay/conduwuit"
repository = "https://gitlab.com/girlbossceo/conduwuit"
readme = "README.md"
version = "0.7.0-alpha+conduwuit-0.1.8"
edition = "2021"

# See also `rust-toolchain.toml`
rust-version = "1.75.0"


[dependencies]
# Used for secure identifiers
rand = "0.8.5"

# Used for conduit::Error type
thiserror = "1.0.58"

# Used to encode server public key
base64 = "0.22.0"

# Used when hashing the state
ring = "0.17.8"

# Used when querying the SRV record of other servers
hickory-resolver = "0.24.0"

# Used to find matching events for appservices
regex = "1.10.3"

# Used to load forbidden room/user regex from config
serde_regex = "1.1.0"
itertools = "0.12.1"

# jwt jsonwebtokens
jsonwebtoken = "9.3.0"

lru-cache = "0.1.2"

# Used for ruma wrapper
serde_html_form = "0.2.5"

# used for TURN server authentication
hmac = "0.12.1"
sha-1 = "0.10.1"

async-trait = "0.1.78"

# used for checking if an IP is in specific subnets / CIDR ranges easier
ipaddress = "0.1.3"

# to encode/decode percent URIs when conduwuit is running without a reverse proxy
#urlencoding = "2.1.3"

# to get the client IP address of requests
#axum-client-ip = "0.4.2"

# to parse user-friendly time durations in admin commands
cyborgtime = "2.1.1"

# all the web/HTTP dependencies
# Used for the http request / response body type for Ruma endpoints used with reqwest
bytes = "1.5.0"
http = "0.2.12"

# standard date and time tools
[dependencies.chrono]
version = "0.4.35"
features = ["alloc"]
default-features = false

# Web framework
[dependencies.axum]
version = "0.6.20"
default-features = false
features = ["form", "headers", "http1", "http2", "json", "matched-path"]
optional = true

[dependencies.axum-server]
version = "0.5.1"
features = ["tls-rustls"]

[dependencies.tower]
version = "0.4.13"
features = ["util"]

[dependencies.tower-http]
version = "0.4.4"
features = [
  "add-extension",
  "cors",
  "sensitive-headers",
  "trace",
  "util",
]

[dependencies.hyper]
version = "0.14"
features = [
  "server",
  "http1",
  "http2",
]

[dependencies.reqwest]
version = "0.11.27"
default-features = false
features = [
  "rustls-tls-native-roots",
  "socks",
  "trust-dns",
]

# all the serde stuff
# Used for pdu definition
[dependencies.serde]
version = "1.0.197"
features = ["rc"]
# Used for appservice registration files
[dependencies.serde_yaml]
version = "0.9.33"
# Used for ruma wrapper
[dependencies.serde_json]
version = "1.0.114"
features = ["raw_value"]


# Used for password hashing
[dependencies.argon2]
version = "0.5.3"
features = [
  "alloc",
  "rand",
]
default-features = false

# Used to generate thumbnails for images
[dependencies.image]
version = "0.25.0"
default-features = false
features = [
  "jpeg",
  "png",
  "gif",
  "webp",
]

# logging
[dependencies.tracing]
version = "0.1.40"
default-features = false
[dependencies.tracing-subscriber]
version = "0.3.18"
features = ["env-filter"]

# optional SHA256 media keys feature
[dependencies.sha2]
version = "0.10.8"
optional = true

# optional opentelemetry, performance measurements, flamegraphs, etc for performance measurements and monitoring
[dependencies.opentelemetry]
version = "0.21.0"
optional = true
[dependencies.tracing-flame]
version = "0.2.0"
optional = true
[dependencies.tracing-opentelemetry]
version = "0.22.0"
optional = true
[dependencies.opentelemetry_sdk]
version = "0.21.2"
optional = true
features = ["rt-tokio"]
[dependencies.opentelemetry-jaeger]
version = "0.20.0"
optional = true
features = ["rt-tokio"]

# optional jemalloc usage
[dependencies.tikv-jemallocator]
version = "0.5.4"
optional = true
default-features = false
features = ["unprefixed_malloc_on_supported_platforms"]
[dependencies.tikv-jemalloc-ctl]
version = "0.5.4"
optional = true
default-features = false
features = ["use_std"]

# for URL previews
[dependencies.webpage]
version = "2.0"
default-features = false

# to support multiple variations of setting a config option
[dependencies.either]
version = "1.10.0"
features = ["serde"]

# to listen on both HTTP and HTTPS if listening on TLS dierctly from conduwuit for complement or sytest
[dependencies.axum-server-dual-protocol]
version = "0.5.2"
optional = true

# used for conduit's CLI and admin room command parsing
[dependencies.clap]
version = "4.5.3"
default-features = false
features = [
  "std",
  "derive",
  "help",
  "usage",
  "error-context",
]

[dependencies.futures-util]
version = "0.3.30"
default-features = false

# Used for reading the configuration from conduit.toml & environment variables
[dependencies.figment]
version = "0.10.15"
features = [
  "env",
  "toml",
]

# Used for matrix spec type definitions and helpers
#ruma = { version = "0.4.0", features = ["compat", "rand", "appservice-api-c", "client-api", "federation-api", "push-gateway-api-c", "state-res", "unstable-pre-spec", "unstable-exhaustive-types"] }
#ruma = { git = "https://github.com/ruma/ruma", rev = "4d9f754657a099df8e61533787b8eebd12946435", features = ["compat", "rand", "appservice-api-c", "client-api", "federation-api", "push-gateway-api-c", "state-res", "unstable-msc2448", "unstable-msc3575", "unstable-exhaustive-types", "ring-compat", "unstable-unspecified", "unstable-msc2870", "unstable-msc3061", "unstable-msc2867", "unstable-extensible-events"] }
#ruma = { path = "../ruma/crates/ruma", features = ["compat", "rand", "appservice-api-c", "client-api", "federation-api", "push-gateway-api-c", "state-res", "unstable-msc2448", "unstable-msc3575", "unstable-exhaustive-types", "ring-compat", "unstable-unspecified" ] }
[dependencies.ruma]
git = "https://github.com/girlbossceo/ruma"
branch = "conduwuit-changes"
features = [
  "compat",
  "rand",
  "appservice-api-c",
  "client-api",
  "federation-api",
  "push-gateway-api-c",
  "state-res",
  "unstable-msc2448",
  "unstable-msc3575",
  "unstable-exhaustive-types",
  "ring-compat",
  "unstable-unspecified",
  "unstable-msc2870",
  "unstable-msc3061",
  "unstable-msc2867",
  "unstable-extensible-events",
]

[dependencies.rust-rocksdb]
git = "https://github.com/zaidoon1/rust-rocksdb"
#branch = "master"
rev = "4b8491b9db45066115435881184902bbb23d3811"
optional = true
default-features = true
features = [
    "multi-threaded-cf",
    "zstd",
]

[dependencies.rusqlite]
git = "https://github.com/rusqlite/rusqlite"
branch = "master"
#rev = "def8e9460d8376a5c0c9f4f9846d413a9cd4581a"
optional = true
features = ["bundled"]

# used only by rusqlite
[dependencies.parking_lot]
version = "0.12.1"
optional = true

# used only by rusqlite
[dependencies.thread_local]
version = "1.1.8"
optional = true

# used only by rusqlite and rust-rocksdb
[dependencies.num_cpus]
version = "1.16.0"
optional = true

[dependencies.tokio]
version = "1.36.0"
features = [
  "fs",
  "macros",
  "sync",
  "signal",
]

# *nix-specific dependencies
[target.'cfg(unix)'.dependencies]
nix = { version = "0.28.0", features = ["resource"] }
sd-notify = { version = "0.4.1", optional = true } # systemd is only available/relevant on *nix platforms
hyperlocal = { git = "https://github.com/softprops/hyperlocal", rev = "2ee4d149644600d326559af0d2b235c945b05c04", features = ["server"] } # unix socket support



[features]
default = ["conduit_bin", "backend_rocksdb", "systemd"]
conduit_bin = ["axum"]
backend_sqlite = ["sqlite"]
backend_rocksdb = ["rocksdb"]
rocksdb = ["rust-rocksdb", "num_cpus"]
jemalloc = ["tikv-jemalloc-ctl", "tikv-jemallocator"]
sqlite = ["rusqlite", "parking_lot", "thread_local", "num_cpus"]
systemd = ["sd-notify"]

#gzip_compression = ["tower-http/compression-gzip"]
zstd_compression = ["tower-http/compression-zstd"]
#brotli_compression = ["tower-http/compression-br"]
#all_compression = ["tower-http/compression-full"] # all compression algos

sha256_media = ["sha2"]
io_uring = ["rust-rocksdb/io-uring"]
axum_dual_protocol = ["axum-server-dual-protocol"]

perf_measurements = ["opentelemetry", "tracing-flame", "tracing-opentelemetry", "opentelemetry_sdk", "opentelemetry-jaeger"]



[[bin]]
name = "conduit"
path = "src/main.rs"
required-features = ["conduit_bin"]

[lib]
name = "conduit"
path = "src/lib.rs"

[package.metadata.deb]
name = "matrix-conduit"
maintainer = "strawberry <strawberry@puppygock.gay>"
copyright = "2024, Timo KÃ¶sters <timo@koesters.xyz>"
license-file = ["LICENSE", "3"]
depends = "$auto, ca-certificates"
extended-description = """\
a cool fork of Conduit, a Matrix homeserver written in Rust"""
section = "net"
priority = "optional"
assets = [
  ["debian/README.md", "usr/share/doc/matrix-conduit/README.Debian", "644"],
  ["README.md", "usr/share/doc/matrix-conduit/", "644"],
  ["target/release/conduit", "usr/sbin/matrix-conduit", "755"],
  ["conduwuit-example.toml", "etc/matrix-conduit/conduit.toml", "640"],
]
conf-files = [
  "/etc/matrix-conduit/conduit.toml"
]
maintainer-scripts = "debian/"
systemd-units = { unit-name = "matrix-conduit" }



[profile.dev]
debug = 0
lto = 'off'
codegen-units = 512
incremental = true
# seems to speed up continuous debug compilations
[profile.dev.build-override]
opt-level = 3
[profile.dev.package."*"] # external dependencies
opt-level = 1
[profile.dev.package."tokio"]
opt-level = 3

# default release profile
[profile.release]
lto = 'thin'
incremental = false
opt-level = 3
overflow-checks = true
strip = "symbols"
panic = "abort"
control-flow-guard = true # Windows only
debug = 0

# high performance release profile which uses fat LTO across all crates, 1 codegen unit, max opt-level, and optimises across all crates
[profile.release-high-perf]
inherits = "release"
lto = 'fat'
codegen-units = 1

# For releases also try to max optimizations for dependencies:
[profile.release-high-perf.build-override]
debug = 0
opt-level = 3
codegen-units = 1

[profile.release-high-perf.package."*"]
debug = 0
opt-level = 3
codegen-units = 1



[lints]
workspace = true

[workspace.lints.rust]
missing_abi = "warn"
# missing_docs = "warn"
noop_method_call = "warn"
pointer_structural_match = "warn"
explicit_outlives_requirements = "warn"
# unreachable_pub = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
unused_macro_rules = "warn"
dead_code = "warn"
elided_lifetimes_in_paths = "warn"
macro_use_extern_crate = "warn"
single_use_lifetimes = "warn"
unsafe_op_in_unsafe_fn = "warn"

# not in rust 1.75.0 (doesn't break CI but won't check for it)
unit_bindings = "warn"

# this seems to suggest broken code and is not working correctly
unused_braces = "allow"

[workspace.lints.clippy]
# pedantic = "warn"

suspicious = "warn" # assume deny in practice
perf = "warn" # assume deny in practice

redundant_clone = "warn"
cloned_instead_of_copied = "warn"
expl_impl_clone_on_copy = "warn"
unnecessary_cast = "warn"
cast_lossless = "warn"
ptr_as_ptr = "warn"
mut_mut = "warn"
char_lit_as_u8 = "warn"
dbg_macro = "warn"
empty_structs_with_brackets = "warn"
get_unwrap = "warn"
# if_then_some_else_none = "warn"
# let_underscore_must_use = "warn"
# map_err_ignore = "warn"
# missing_docs_in_private_items = "warn"
negative_feature_names = "warn"
pub_without_shorthand = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_feature_names = "warn"
redundant_type_annotations = "warn"
# ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
str_to_string = "warn"
# string_add = "warn"
# string_slice = "warn"
string_to_string = "warn"
tests_outside_test_module = "warn"
undocumented_unsafe_blocks = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
# unwrap_used = "warn"
# expect_used = "warn"
wildcard_dependencies = "warn"
or_fun_call = "warn"
unnecessary_lazy_evaluations = "warn"
# as_conversions = "warn"
assertions_on_result_states = "warn"
default_union_representation = "warn"
deref_by_slicing = "warn"
empty_drop = "warn"
# error_impl_error = "warn"
exit = "warn"
filetype_is_file = "warn"
float_cmp_const = "warn"
format_push_string = "warn"
impl_trait_in_params = "warn"
ref_to_mut = "warn"
# let_underscore_untyped = "warn"
lossy_float_literal = "warn"
mem_forget = "warn"
missing_assert_message = "warn"
# mod_module_files = "warn"
# multiple_inherent_impl = "warn"
mutex_atomic = "warn"
# same_name_method = "warn"
semicolon_outside_block = "warn"
fn_to_numeric_cast = "warn"
fn_to_numeric_cast_with_truncation = "warn"
string_lit_chars_any = "warn"
suspicious_xor_used_as_pow = "warn"
try_err = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
verbose_file_reads = "warn"
# cast_precision_loss = "warn"
cast_possible_wrap = "warn"
# cast_possible_truncation = "warn"
redundant_closure_for_method_calls = "warn"
large_futures = "warn"

# not in rust 1.75.0 (breaks CI)
# infinite_loop = "warn"
